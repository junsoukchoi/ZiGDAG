// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// dZIHP_cpp
double dZIHP_cpp(const arma::vec& param, const arma::vec& y, const arma::mat& X, double lower, double upper);
RcppExport SEXP _ZiGDAG_dZIHP_cpp(SEXP paramSEXP, SEXP ySEXP, SEXP XSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type param(paramSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(dZIHP_cpp(param, y, X, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// gradZIHP_cpp
Rcpp::NumericVector gradZIHP_cpp(const arma::vec& param, const arma::vec& y, const arma::mat& X);
RcppExport SEXP _ZiGDAG_gradZIHP_cpp(SEXP paramSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type param(paramSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradZIHP_cpp(param, y, X));
    return rcpp_result_gen;
END_RCPP
}
// dZINB_cpp
double dZINB_cpp(const arma::vec& param, const arma::vec& y, const arma::mat& X, double lower, double upper);
RcppExport SEXP _ZiGDAG_dZINB_cpp(SEXP paramSEXP, SEXP ySEXP, SEXP XSEXP, SEXP lowerSEXP, SEXP upperSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type param(paramSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< double >::type lower(lowerSEXP);
    Rcpp::traits::input_parameter< double >::type upper(upperSEXP);
    rcpp_result_gen = Rcpp::wrap(dZINB_cpp(param, y, X, lower, upper));
    return rcpp_result_gen;
END_RCPP
}
// gradZINB_cpp
Rcpp::NumericVector gradZINB_cpp(const arma::vec& param, const arma::vec& y, const arma::mat& X);
RcppExport SEXP _ZiGDAG_gradZINB_cpp(SEXP paramSEXP, SEXP ySEXP, SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::vec& >::type param(paramSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type y(ySEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(gradZINB_cpp(param, y, X));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ZiGDAG_dZIHP_cpp", (DL_FUNC) &_ZiGDAG_dZIHP_cpp, 5},
    {"_ZiGDAG_gradZIHP_cpp", (DL_FUNC) &_ZiGDAG_gradZIHP_cpp, 3},
    {"_ZiGDAG_dZINB_cpp", (DL_FUNC) &_ZiGDAG_dZINB_cpp, 5},
    {"_ZiGDAG_gradZINB_cpp", (DL_FUNC) &_ZiGDAG_gradZINB_cpp, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_ZiGDAG(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
